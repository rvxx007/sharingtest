import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  openGraph: {
    title: "My Certificate",
    description: "This is my certificate",
    url: "https://sharingtest.onrender.com",
    siteName: "sharingtest",
    images: [
      {
        url: "https://sharingtest.onrender.com/certificate.png",
        width: 300,
        height: 300,
        alt: "certificate",
      },
    ],
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const certificateUrl = "https://sharingtest.onrender.com/certificate.png";

  return (
    <html lang="en">
      <head>
        <title>My Certificate from YourWebsite</title>
        <meta property="og:title" content="My Certificate from YourWebsite" />
        <meta
          property="og:description"
          content="ðŸŽ‰ I just earned a certificate from YourWebsite! Check it out!"
        />
        <meta property="og:image" content={certificateUrl} />
        <meta
          property="og:url"
          itemProp="image"
          content="https://sharingtest.onrender.com"
        />
        <meta property="og:type" content="website" />
        <meta property="og:image:type" content="image/png" />
        <meta property="og:image:width" content="300" />
        <meta property="og:image:height" content="300" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content="My Certificate from YourWebsite" />
        <meta
          name="twitter:description"
          content="ðŸŽ‰ I just earned a certificate from YourWebsite!"
        />
        <meta name="twitter:image" content={certificateUrl} />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
